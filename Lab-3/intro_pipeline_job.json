{
  "components": {
    "comp-build-sentence": {
      "executorLabel": "exec-build-sentence",
      "inputDefinitions": {
        "parameters": {
          "emoji": {
            "parameterType": "STRING"
          },
          "emojitext": {
            "parameterType": "STRING"
          },
          "product": {
            "parameterType": "STRING"
          }
        }
      },
      "outputDefinitions": {
        "parameters": {
          "Output": {
            "parameterType": "STRING"
          }
        }
      }
    },
    "comp-emoji": {
      "executorLabel": "exec-emoji",
      "inputDefinitions": {
        "parameters": {
          "text": {
            "parameterType": "STRING"
          }
        }
      },
      "outputDefinitions": {
        "parameters": {
          "emoji": {
            "parameterType": "STRING"
          },
          "emoji_text": {
            "parameterType": "STRING"
          }
        }
      }
    },
    "comp-product-name": {
      "executorLabel": "exec-product-name",
      "inputDefinitions": {
        "parameters": {
          "text": {
            "parameterType": "STRING"
          }
        }
      },
      "outputDefinitions": {
        "parameters": {
          "Output": {
            "parameterType": "STRING"
          }
        }
      }
    }
  },
  "defaultPipelineRoot": "gs://mlops-421501-maha-bucket/pipeline_root/",
  "deploymentSpec": {
    "executors": {
      "exec-build-sentence": {
        "container": {
          "args": [
            "--executor_input",
            "{{$}}",
            "--function_to_execute",
            "build_sentence"
          ],
          "command": [
            "sh",
            "-c",
            "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0' '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"$0\" \"$@\"\n",
            "sh",
            "-ec",
            "program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
            "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef build_sentence(\n    product: str,\n    emoji: str,\n    emojitext: str\n) -> str:\n    print(\"We completed the pipeline, hooray!\")\n    end_str = product + \" is \"\n    if len(emoji) > 0:\n        end_str += emoji\n    else:\n        end_str += emojitext\n    return(end_str)\n\n"
          ],
          "image": "python:3.7"
        }
      },
      "exec-emoji": {
        "container": {
          "args": [
            "--executor_input",
            "{{$}}",
            "--function_to_execute",
            "emoji"
          ],
          "command": [
            "sh",
            "-c",
            "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0' '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&  python3 -m pip install --quiet --no-warn-script-location 'emoji' && \"$0\" \"$@\"\n",
            "sh",
            "-ec",
            "program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
            "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef emoji(\n    text: str,\n) -> NamedTuple(\n    \"Outputs\",\n    [\n        (\"emoji_text\", str),  # Return parameters\n        (\"emoji\", str),\n    ],\n):\n    import emoji\n\n    emoji_text = text\n    emoji_str = emoji.emojize(':' + emoji_text + ':', language='alias')\n    print(\"output one: {}; output_two: {}\".format(emoji_text, emoji_str))\n    return (emoji_text, emoji_str)\n\n"
          ],
          "image": "python:3.8"
        }
      },
      "exec-product-name": {
        "container": {
          "args": [
            "--executor_input",
            "{{$}}",
            "--function_to_execute",
            "product_name"
          ],
          "command": [
            "sh",
            "-c",
            "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0' '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"$0\" \"$@\"\n",
            "sh",
            "-ec",
            "program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
            "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef product_name(text: str) -> str:\n    return text\n\n"
          ],
          "image": "python:3.9"
        }
      }
    }
  },
  "pipelineInfo": {
    "description": "An intro pipeline",
    "name": "hello-world"
  },
  "root": {
    "dag": {
      "tasks": {
        "build-sentence": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-build-sentence"
          },
          "dependentTasks": [
            "emoji",
            "product-name"
          ],
          "inputs": {
            "parameters": {
              "emoji": {
                "taskOutputParameter": {
                  "outputParameterKey": "emoji",
                  "producerTask": "emoji"
                }
              },
              "emojitext": {
                "taskOutputParameter": {
                  "outputParameterKey": "emoji_text",
                  "producerTask": "emoji"
                }
              },
              "product": {
                "taskOutputParameter": {
                  "outputParameterKey": "Output",
                  "producerTask": "product-name"
                }
              }
            }
          },
          "taskInfo": {
            "name": "build-sentence"
          }
        },
        "emoji": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-emoji"
          },
          "inputs": {
            "parameters": {
              "text": {
                "componentInputParameter": "emoji_str"
              }
            }
          },
          "taskInfo": {
            "name": "emoji"
          }
        },
        "product-name": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-product-name"
          },
          "inputs": {
            "parameters": {
              "text": {
                "componentInputParameter": "text"
              }
            }
          },
          "taskInfo": {
            "name": "product-name"
          }
        }
      }
    },
    "inputDefinitions": {
      "parameters": {
        "emoji_str": {
          "defaultValue": "sparkles",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "text": {
          "defaultValue": "Vertex Pipelines",
          "isOptional": true,
          "parameterType": "STRING"
        }
      }
    }
  },
  "schemaVersion": "2.1.0",
  "sdkVersion": "kfp-2.7.0"
}